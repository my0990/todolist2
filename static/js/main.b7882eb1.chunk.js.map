{"version":3,"sources":["logo.svg","component/todolistHead.js","App.js","reportWebVitals.js","index.js"],"names":["Head","useState","Date","date","Container","styled","div","CurDate","getFullYear","getMonth","getDate","getDay","GlobalStyle","createGlobalStyle","Card2","ul","Card1","CardSpan","Card","props","localStorage","setItem","JSON","stringify","array","map","a","i","className","onClick","copy","clicked","array변경","console","log","handleClick","content","splice","deleteClick","App","input","input변경","parse","getItem","inputRef","useRef","reset","current","focus","unshift","onKeyPress","e","key","placeholder","onChange","target","value","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7882eb1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nfunction Head() {\r\n    const[date,setDate] = useState(new Date());\r\n\r\n    const Container = styled.div`\r\n        margin: 20px;\r\n        font-size: 40px;\r\n        text-align: center;    \r\n    `;\r\n\r\n    const CurDate = styled.div`\r\n        font-size: 24px;\r\n    `;\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <CurDate>\r\n                {date.getFullYear()}&nbsp;/&nbsp;\r\n                {date.getMonth() +1}&nbsp;/&nbsp;\r\n                {date.getDate()}&nbsp;\r\n                {date.getDay() === 0\r\n                ? \"일요일\"\r\n                : date.getDay() === 1\r\n                ? \"월요일\"\r\n                : date.getDay() === 2\r\n                ? \"화요일\"\r\n                : date.getDay() === 3\r\n                ? \"수요일\"\r\n                : date.getDay() === 4\r\n                ? \"목요일\"\r\n                : date.getDay() === 5\r\n                ? \"금요일\"\r\n                : \"토요일\"}\r\n            </CurDate>\r\n            \r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Head;","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useRef, Component} from 'react';\nimport styled, {createGlobalStyle} from 'styled-components';\nimport {Container, Col, Row} from 'react-bootstrap';\nimport Head from './component/todolistHead';\nimport { MdDelete } from 'react-icons/md'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef\n  }\n`;\n\nconst cardUl = styled.ul`\n  padding: 0px;\n`;\n\nconst Card2 = styled.div`\n  margin: 0px;\n  text-align: left;\n  \n`;\n\nconst Card1 = styled.div`\n  \n  padding: 30px;\n  border-bottom: 1px solid gray;\n`;\n\nconst CardSpan = styled.div`\n  \n  cursor: pointer;\n`;\n\nfunction App() {\n\n  let[input,input변경] = useState();\n  let[array,array변경] = useState(JSON.parse(localStorage.getItem('itemList')));\n  // JSON.parse(localStorage.getItem('itemList'))\n\n\n\n\n\n\n\n  const inputRef = useRef(null);\n  const reset = () => {\n    inputRef.current.focus();\n    if(array != null){\n      var copy = [...array]\n    } else {\n      var copy = [];\n    }\n    \n    \n    copy.unshift({\n      clicked: false,\n      content: input\n    })\n    \n    \n    console.log(\"array변경전(array)):\" + array);\n    array변경(copy);\n    console.log(\"array변경후(array)):\" + array);\n\n    localStorage.setItem('itemList', JSON.stringify(array));\n    \n    input변경(\"\"); \n  }\n  // let[test,test변경] = useState();\n\n  // const reset = () => {\n  //   inputRef.current.focus();\n  //   test변경(\"\");\n  // }\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      reset();\n    }\n  }\n\n\n\n  \n\n\n\n  return (\n    <div className=\"App\">\n      \n      <Head />\n      <GlobalStyle />\n      <Card1>\n        <input  className=\"input\" onKeyPress={handleKeyPress} placeholder=\"입력하시라\" onChange={(e)=>{input변경(e.target.value)}} value={input} ref={inputRef}></input>\n        <button className=\"button\" onClick={reset  \n          }>+</button>\n      </Card1>\n\n      <Card array={array} array변경={array변경}/>\n      \n      \n\n      \n    </div>\n  );\n}\n\n\nfunction Card(props) {\n\n  \n\n  let handleClick = (i) => {\n    let copy = [...props.array];\n    if(copy[i].clicked){\n      copy[i].clicked = false;\n    } else {\n      copy[i].clicked = true;\n    }\n    props.array변경(copy);\n    console.log(copy[i].clicked );\n    localStorage.setItem('itemList', JSON.stringify(props.array));\n  }\n\n  let deleteClick = (i) => {\n    let copy = [...props.array];\n    copy.splice(i,1);\n    props.array변경(copy);\n    localStorage.setItem('itemList', JSON.stringify(props.array));\n  }\n\n  return (\n    <Card2>\n      \n      <cardUl>\n        { localStorage.setItem('itemList', JSON.stringify(props.array))}\n        {props.array\n        ?props.array.map(function(a,i){\n          return(\n            <div key={i}>\n            <li  className=\"cardLi\"><CardSpan onClick={()=>{\n              handleClick(i);\n            }} className={\n              a.clicked\n              ? \"CardSpanClicked\"\n              : \"CardSpanNotClicked\"\n            }>{a.content}{console.log(a)}</CardSpan>\n            <MdDelete className=\"cardButton\" onClick={()=>{\n              deleteClick(i);\n              // let copy = [...props.array];\n              // copy.splice(i,1);\n              // props.array변경(copy);\n              // localStorage.setItem('itemList', JSON.stringify(props.array));\n              \n            }}></MdDelete></li>\n            {console.log(\"최종array\" + props.array)}\n            <div></div>\n            </div>\n            \n          )\n            \n            \n        })\n        : null\n        }\n      \n      </cardUl>\n\n      \n      \n      \n\n\n    </Card2>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}